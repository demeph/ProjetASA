/**
 */
package fr.univnantes.asa.cosa.provider;

import fr.univnantes.asa.cosa.util.CosaAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class CosaItemProviderAdapterFactory extends CosaAdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public CosaItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.Component} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentItemProvider componentItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.Component}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentAdapter() {
		if (componentItemProvider == null) {
			componentItemProvider = new ComponentItemProvider(this);
		}

		return componentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.Connector} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConnectorItemProvider connectorItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.Connector}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConnectorAdapter() {
		if (connectorItemProvider == null) {
			connectorItemProvider = new ConnectorItemProvider(this);
		}

		return connectorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.Port} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PortItemProvider portItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.Port}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPortAdapter() {
		if (portItemProvider == null) {
			portItemProvider = new PortItemProvider(this);
		}

		return portItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.Role} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleItemProvider roleItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.Role}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleAdapter() {
		if (roleItemProvider == null) {
			roleItemProvider = new RoleItemProvider(this);
		}

		return roleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.Service} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceItemProvider serviceItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.Service}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceAdapter() {
		if (serviceItemProvider == null) {
			serviceItemProvider = new ServiceItemProvider(this);
		}

		return serviceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.Configuration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConfigurationItemProvider configurationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.Configuration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConfigurationAdapter() {
		if (configurationItemProvider == null) {
			configurationItemProvider = new ConfigurationItemProvider(this);
		}

		return configurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.RequiredPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequiredPortItemProvider requiredPortItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.RequiredPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequiredPortAdapter() {
		if (requiredPortItemProvider == null) {
			requiredPortItemProvider = new RequiredPortItemProvider(this);
		}

		return requiredPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.ProvidedPort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProvidedPortItemProvider providedPortItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.ProvidedPort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProvidedPortAdapter() {
		if (providedPortItemProvider == null) {
			providedPortItemProvider = new ProvidedPortItemProvider(this);
		}

		return providedPortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.RequiredRole} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequiredRoleItemProvider requiredRoleItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.RequiredRole}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequiredRoleAdapter() {
		if (requiredRoleItemProvider == null) {
			requiredRoleItemProvider = new RequiredRoleItemProvider(this);
		}

		return requiredRoleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.ProvidedRole} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProvidedRoleItemProvider providedRoleItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.ProvidedRole}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProvidedRoleAdapter() {
		if (providedRoleItemProvider == null) {
			providedRoleItemProvider = new ProvidedRoleItemProvider(this);
		}

		return providedRoleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.RequiredService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequiredServiceItemProvider requiredServiceItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.RequiredService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequiredServiceAdapter() {
		if (requiredServiceItemProvider == null) {
			requiredServiceItemProvider = new RequiredServiceItemProvider(this);
		}

		return requiredServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.ProvidedService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProvidedServiceItemProvider providedServiceItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.ProvidedService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProvidedServiceAdapter() {
		if (providedServiceItemProvider == null) {
			providedServiceItemProvider = new ProvidedServiceItemProvider(this);
		}

		return providedServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.Attachement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttachementItemProvider attachementItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.Attachement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttachementAdapter() {
		if (attachementItemProvider == null) {
			attachementItemProvider = new AttachementItemProvider(this);
		}

		return attachementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.Binding} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BindingItemProvider bindingItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.Binding}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBindingAdapter() {
		if (bindingItemProvider == null) {
			bindingItemProvider = new BindingItemProvider(this);
		}

		return bindingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.NamedElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NamedElementItemProvider namedElementItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.NamedElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNamedElementAdapter() {
		if (namedElementItemProvider == null) {
			namedElementItemProvider = new NamedElementItemProvider(this);
		}

		return namedElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.SimpleConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimpleConfigurationItemProvider simpleConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.SimpleConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimpleConfigurationAdapter() {
		if (simpleConfigurationItemProvider == null) {
			simpleConfigurationItemProvider = new SimpleConfigurationItemProvider(this);
		}

		return simpleConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.CompositeConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompositeConfigurationItemProvider compositeConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.CompositeConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompositeConfigurationAdapter() {
		if (compositeConfigurationItemProvider == null) {
			compositeConfigurationItemProvider = new CompositeConfigurationItemProvider(this);
		}

		return compositeConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link fr.univnantes.asa.cosa.Glue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GlueItemProvider glueItemProvider;

	/**
	 * This creates an adapter for a {@link fr.univnantes.asa.cosa.Glue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGlueAdapter() {
		if (glueItemProvider == null) {
			glueItemProvider = new GlueItemProvider(this);
		}

		return glueItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (componentItemProvider != null)
			componentItemProvider.dispose();
		if (connectorItemProvider != null)
			connectorItemProvider.dispose();
		if (portItemProvider != null)
			portItemProvider.dispose();
		if (roleItemProvider != null)
			roleItemProvider.dispose();
		if (serviceItemProvider != null)
			serviceItemProvider.dispose();
		if (configurationItemProvider != null)
			configurationItemProvider.dispose();
		if (requiredPortItemProvider != null)
			requiredPortItemProvider.dispose();
		if (providedPortItemProvider != null)
			providedPortItemProvider.dispose();
		if (requiredRoleItemProvider != null)
			requiredRoleItemProvider.dispose();
		if (providedRoleItemProvider != null)
			providedRoleItemProvider.dispose();
		if (requiredServiceItemProvider != null)
			requiredServiceItemProvider.dispose();
		if (providedServiceItemProvider != null)
			providedServiceItemProvider.dispose();
		if (attachementItemProvider != null)
			attachementItemProvider.dispose();
		if (bindingItemProvider != null)
			bindingItemProvider.dispose();
		if (namedElementItemProvider != null)
			namedElementItemProvider.dispose();
		if (simpleConfigurationItemProvider != null)
			simpleConfigurationItemProvider.dispose();
		if (compositeConfigurationItemProvider != null)
			compositeConfigurationItemProvider.dispose();
		if (glueItemProvider != null)
			glueItemProvider.dispose();
	}

}
